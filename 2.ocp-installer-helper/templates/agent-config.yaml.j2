apiVersion: v1alpha1
kind: AgentConfig
metadata:
  name: {{ metadata_name }}
rendezvousIP: {{ rendezvousIP }}
{% if additionalNTPSources %}
additionalNTPSources:
  - {{ additionalNTPSources }}
{% endif %}
hosts:
{% for node in nodes %}
  - hostname: {{ node.hostname }}
    role: {{ node.role }}
    interfaces:
    {%- for iface in node.interfaces %}
      - name: {{ iface.name }}
        macAddress: {{ iface.macAddress }}
    {%- endfor %}
    rootDeviceHints:
      deviceName: {{ node.rootDeviceHints.deviceName }}
    networkConfig:
      interfaces:
      {%- for iface in node.networkConfig.interfaces %}
        - name: {{ iface.name }}
          type: {{ iface.type }}
          state: {{ iface.state }}
          {% if iface.mtu %}mtu: {{ iface.mtu }}{% endif %}
          mac-address: {{ iface['mac-address'] }}
          ipv4:
            enabled: {{ iface.ipv4.enabled }}
            dhcp: {{ iface.ipv4.dhcp }}
            address:
            {%- for addr in iface.ipv4.address %}
              - ip: {{ addr.ip }}
                prefix-length: {{ addr['prefix-length'] }}
            {%- endfor %}
          ipv6:
            enabled: {{ iface.ipv6.enabled }}
          {% if iface.type == 'bond' %}
          link-aggregation:
            mode: {{ iface['link-aggregation'].mode }}
            {# [수정 2] miimon 형식을 중첩 구조로 렌더링 #}
            options:
              miimon: "{{ iface['link-aggregation'].options.miimon }}"
            port:
            {%- for port in iface['link-aggregation'].port %}
              - {{ port }}
            {%- endfor %}
          {% endif %}
      {%- endfor %}
      {%- if node.networkConfig.routes %}
      routes:
        config:
        {%- for route in node.networkConfig.routes.config %}
          - destination: {{ route.destination }}
            next-hop-address: {{ route['next-hop-address'] }}
            next-hop-interface: {{ route['next-hop-interface'] }}
            table-id: {{ route['table-id'] }}
        {%- endfor %}
      {%- endif %}
      {%- if node.networkConfig['dns-resolver'] %}
      dns-resolver:
        config:
          server:
          {%- for server in node.networkConfig['dns-resolver'].config.server %}
            - {{ server }}
          {%- endfor %}
      {%- endif %}
{% endfor %}
